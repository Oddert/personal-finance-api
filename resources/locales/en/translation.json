{
    "auth": {
        "messages": {
            "noRefreshToken": "No refresh token provided in request.",
            "noUserForName": "No user found for username \"{{username}}\".",
            "usernameTaken": "The username requested is already taken.",
            "usernameOrPasswordWrong": "Username or password is not correct."
        }
    },
    "budget": {
        "messages": {
            "deletedSuccessfully": "Budget deleted successfully.",
            "notFoundById": "No Budget with ID \"{{budgetId}}\" found.",
            "setAsDefault": "Budget set as default.",
            "updatedSuccessfully": "Budget updated successfully."
        }
    },
    "card": {
        "messages": {
            "deletedSuccessfully": "Card deleted successfully.",
            "notFoundById": "No Card with ID \"{{cardId}}\" found.",
            "setAsDefault": "Card set as default.",
            "updatedSuccessfully": "Card updated successfully."
        }
    },
    "category": {
        "messages": {
            "categoriesCreated": "Categories created successfully.",
            "deletedSuccessfully": "Category deleted successfully.",
            "notFoundById": "No Category with ID \"{{categoryId}}\" found.",
            "setAsDefault": "Category set as default.",
            "updatedSuccessfully": "Category updated successfully."
        }
    },
    "matcher": {
        "messages": {
            "deletedSuccessfully": "Matcher deleted successfully.",
            "matchersCreated": "Matchers created successfully.",
            "notFoundById": "No Matcher with ID \"{{matcherId}}\" found.",
            "setAsDefault": "Matcher set as default.",
            "updatedSuccessfully": "Matcher updated successfully."
        }
    },
    "scenario": {
        "messages": {
            "deletedSuccessfully": "Scenario deleted successfully.",
            "scenariosCreated": "Scenarios created successfully.",
            "notFoundById": "No Scenario with ID \"{{scenarioId}}\" found.",
            "setAsDefault": "Scenario set as default.",
            "updatedSuccessfully": "Scenario updated successfully."
        }
    },
    "transaction": {
        "messages": {
            "createdSuccessfully": "Transaction created successfully.",
            "deletedSuccessfully": "Transaction deleted successfully.",
            "notFoundById": "No Transaction with ID \"{{transactionId}}\" found.",
            "setAsDefault": "Transaction set as default.",
            "updatedSuccessfully": "Transaction updated successfully.",
            "transactionsCreated": "Transactions created successfully.",
            "transactionsUpdate": "Transactions updated successfully."
        }
    },
    "genericMessages": {
        "badRequest": "There was an issue in the format of your request. Please check and try again.",
        "conflict": "The requested resource is not available.",
        "createdOK": "Resource created successfully.",
        "multipleChoices": "The request has more than one possible response.",
        "notLoggedIn": "You are not logged in.",
        "notFound": "The requested resource could not be found.",
        "processedOk": "Request processed successfully.",
        "serverError": "There was an issue processing your request.",
        "somethingWentWrong": "Something went wrong processing your request"
    },
    "securityErrors": {
        "authHeaderMalformed": "\"Authorization\" header in request is malformed. Please supply a valid JWT.",
        "jtiMalformed": "Token format is invalid, the key \"jti\" is missing.",
        "noAuthHeader": "No \"Authorization\" header found in request.",
        "subMalformed": "Token format is invalid, the key \"sub\" is missing.",
        "tokenExpired": "Token Expired",
        "tokenRevoked": "Token Revoked",
        "unableToDecodeAccessToken": "Unable to decode access token, token type is invalid."
    },
    "securityMessages": {
        "accessTokenExpired": "Access token has expired.",
        "accessTokenUsed": "Access token has already been used.",
        "loginExpired": "Your logged in has expired, please login and try again.",
        "refreshTokenUsed": "Access token has already been used."
    }
}